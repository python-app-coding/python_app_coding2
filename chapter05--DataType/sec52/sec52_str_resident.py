# coding: utf8

"""
# 字符串乘以常数形成的短字符串可以驻留:
>>> ss1 = 'abc12345'*512	    # 长度6*682<=4096，生成的字符串对象驻留内存
>>> ss2 = 'abc12345'*512	    # 第二个生成的字符串变量为与ss1相同的引用
>>> print('id(ss1)=', id(ss1), 'id(ss2)=', id(ss2)) # doctest: +ELLIPSIS
id(ss1)=... id(ss2)=...
>>> id(ss1) == id(ss2)
True

>>> xs1 = 'a_123'*820	        # 长度5*820=4100>4096, 会生成不同的对象
>>> xs2 = 'a_123'*820
>>> id(xs1) == id(xs2)
False

# 长度超过4096的字符串，不能驻留:
>>> ls1 = 'abc123'*683           # 长度超过4096, 赋值后会产生不同的字符串对象
>>> ls2 = 'abc123'*683
>>> id(ls1) == id(ls2)
False


# 使用变量乘以字符串时，除了0和1之外，都不会驻留:
>>> v0, v1 = 0, 1
>>> vs01 = 'abc123'*v0          # 任何字符串乘以0产生空串，驻留内存
>>> vs02 = 'abc123'*v0
>>> id(vs01) == id(vs02)
True


>>> vs11 = 'abc123'*v1          # 字符串乘以1，不改变原串，驻留内存
>>> vs12 = 'abc123'*v1
>>> id(vs11) == id(vs12)
True

>>> vi = 2                      # 变量值>=2时，产生的字符串不驻留内存
>>> vs1 = 'abc123'*vi
>>> vs2 = 'abc123'*vi
>>> id(vs1) == id(vs2)
False
"""